# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = import-control-entry-declaration-store

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.entrydeclarationstore.http.XmlOrJsonErrorHandler"

play.http.parser.maxMemoryBuffer = 1000K

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"
play.modules.enabled += "uk.gov.hmrc.entrydeclarationstore.config.DIModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

http-verbs.retries.ssl-engine-closed-already.enabled = true

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {

  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 200

  uk.gov.hmrc.entrydeclarationstore.controllers.EntryDeclarationSubmissionController = {
    needsAuth = true
    needsLogging = false
    needsAuditing = false
    allowRequests = true
  }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Api related config
api {
  # The status of the version of the API for the API Platform.
  status = "ALPHA"
  endpoints.enabled = false

  # The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
  gateway.context = "customs/imports/declarations"
}

bootstrap.http.headersAllowlist = ["latencyInMs", "Reject", "RejectRandomly", "simulateRiskingResponse", "simulateRiskingResponseLatencyMillis", "riskingResponseError", "simulateInterventionResponseLatencyMillis", "simulateInterventionResponse", "X-Client-Id"]

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

# Microservice specific config

mongodb {
  uri = "mongodb://localhost:27017/import-control-entry-declaration-store"
  defaultTtl = 7 days
  shortTtl = 1 day
  housekeepingRunInterval = 1 minute
  housekeepingLockDuration = 5 minutes
  housekeepingRunLimit = 2000
  housekeepingBatchSize = 100
}


microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }

    api-subscription-fields {
      host = localhost
      port = 9650
    }

    import-control-entry-declaration-eis {
      protocol = http
      host = localhost
      port = 9819

      new-ens-url-path = /safetyandsecurity/newenssubmission/v1
      amend-ens-url-path = /safetyandsecurity/amendsubmission/v1

      trafficSwitch {
        maxFailures = 5
        callTimeout = 30 seconds
        flowingStateRefreshPeriod = 1 second
        notFlowingStateRefreshPeriod = 500 millis
      }

      numberOfRetries = 5
      initialDelay = 500 millis
      retryStatusCodes = [499, 502, 503, 504]

      bearerToken = ""
      inboundBearerToken = "eHSNojZX1IrUXfm0OVKP2rgpgxviCzE00G3y5AQtGWoBQnCC11"
      environment = "local"
    }

    import-control-entry-declaration-events {
      protocol = http
      host = localhost
      port = 9813
    }

    non-repudiation {
      host = localhost
      port = 9814
      xApiKey = "dummy-api-key"
      numberOfRetries = 10
      initialDelay = 500 milliseconds
    }
  }
}

# Auto-replay parameters
# runInterval:          Period between checks to reset traffic switch and replay undelivered submissions
# lockDuration:         Timeout period on lock holding auto replay to a single instance of this microservice
# maxConsecutiveRepays: When an auto-replay completes, it will check for further undelivered submissions, and run again if more are found.
#                       This setting determines the maximum number of these back-to-back auto-replays which can occur before returning
#                       to the periodic (runInterval) checks.
auto-replay {
  runInterval = 7 minutes
  lockDuration = 10 minutes
  maxConsecutiveReplays = 5
}

# Replay parameters
# batchSize:            Number of undelivered submissions which are sent to be replayed as a group
# lockDuration:         A mongo lock is created when the an replay (auto or manual) is started. This lock is periodically renewed as
#                       necessary as a list of undelivered submissions are replayed. While a replay is running, this lock prevents
#                       another replay from being started. "lockDuration" determines the period of time each lock renewal will last. If
#                       the submission of a batch of undelivered records takes longer than this configured period, there is a risk
#                       another replay (auto or manual) could be started. This situation would seen as concurrent replays in replay
#                       history list.
# storageLifetime:      The period of time that replay records in the mongo "replayState" collection are held before deletion.
replay {
  batchSize = 10
  lockDuration = 10 minutes
  storageLifetime = 60 days
}

// The limit on the numbers to include in an error response
response.max.errors = 100

validateXMLtoJsonTransformation = true

logSubmissionPayloads = false

feature.optionalFields = false

businessRules315 = [
  "rules/p1_p70.json", "rules/p2_p71.json", "rules/p3_p72.json", "rules/p4_p73.json", "rules/p5_p74.json"
  "rules/p6_p75.json", "rules/p7_p76.json", "rules/p8_p77.json", "rules/p9_p78.json", "rules/p10_p79.json",
  "rules/p11_p80.json", "rules/p12_p81.json", "rules/p13_p82.json", "rules/p14_p83.json", "rules/p15_p84.json",
  "rules/p16_p85.json", "rules/p17_p86.json", "rules/p18_p87.json", "rules/p19_p88.json", "rules/p20_p89.json",
  "rules/p21_p90.json", "rules/p22_p91.json", "rules/p23_p92.json", "rules/p24_p93.json", "rules/p25_p94.json",
  "rules/p26_p95.json", "rules/p27_p96.json", "rules/p28_p97.json", "rules/p29_p98.json", "rules/p30_p99.json",
  "rules/p31_p100.json", "rules/p32_p101.json", "rules/p33_p102.json", "rules/p34_p103.json", "rules/p35_p104.json",
  "rules/p36_p105.json", "rules/p37_p106.json", "rules/p38_p107.json", "rules/p39_p108.json", "rules/p40_p109.json",
  "rules/p41_p110.json", "rules/p42_p111.json", "rules/p43_p112.json", "rules/p44_p113.json", "rules/p45_p114.json",
  "rules/p46_p115.json", "rules/p47_p116.json", "rules/p48_p117.json", "rules/p49_p118.json", "rules/p50_p119.json",
  "rules/p51_p120.json", "rules/p121.json", "rules/p52_p122.json", "rules/p53_p123.json", "rules/p54_p124.json",
  "rules/p55_p125.json", "rules/p56_p126.json", "rules/p57_p127.json", "rules/p58_p128.json", "rules/p59_p129.json",
  "rules/p60_p130.json", "rules/p61_p131.json", "rules/p62_p132.json", "rules/p63_p133.json", "rules/p64_p134.json",
  "rules/p65_p135.json", "rules/p66_p136.json", "rules/p67_p137.json", "rules/p68_p138.json", "rules/p69_p139.json",
  "rules/p5_p74_non_GB_Eori_CR.json", "rules/p11_p80_non_GB_Eori_CR.json", "rules/p17_p86_non_GB_Eori_CR.json",
  "rules/p63_p133_non_GB_Eori_CR.json", "rules/p29_p98_non_GB_Eori_CR.json", "rules/p35_p104_non_GB_Eori_CR.json",
  "rules/p46_p115_non_GB_Eori_CR.json"
]

businessRules315New = [
  "rules/p1_p70.json", "rules/p2_p71.json", "rules/p3_p72_New.json", "rules/p4_p73.json", "rules/p5_p74.json"
  "rules/p6_p75.json", "rules/p7_p76.json", "rules/p8_p77.json", "rules/p9_p78.json", "rules/p10_p79.json",
  "rules/p11_p80.json", "rules/p12_p81.json", "rules/p13_p82.json", "rules/p14_p83.json", "rules/p15_p84.json",
  "rules/p16_p85.json", "rules/p17_p86.json", "rules/p18_p87.json", "rules/p19_p88.json", "rules/p20_p89.json",
  "rules/p21_p90.json", "rules/p22_p91.json", "rules/p23_p92.json", "rules/p24_p93.json", "rules/p25_p94.json",
  "rules/p26_p95.json", "rules/p27_p96.json", "rules/p28_p97.json", "rules/p29_p98.json", "rules/p30_p99.json",
  "rules/p31_p100.json", "rules/p32_p101.json", "rules/p33_p102.json", "rules/p34_p103.json", "rules/p35_p104.json",
  "rules/p36_p105.json", "rules/p37_p106.json", "rules/p38_p107.json", "rules/p39_p108.json", "rules/p40_p109.json",
  "rules/p41_p110.json", "rules/p42_p111.json", "rules/p43_p112.json", "rules/p44_p113.json", "rules/p45_p114.json",
  "rules/p46_p115.json", "rules/p47_p116.json", "rules/p48_p117.json", "rules/p49_p118.json", "rules/p50_p119.json",
  "rules/p51_p120.json", "rules/p121.json", "rules/p52_p122.json", "rules/p53_p123.json", "rules/p54_p124.json",
  "rules/p55_p125.json", "rules/p56_p126.json", "rules/p57_p127.json", "rules/p58_p128.json", "rules/p59_p129.json",
  "rules/p60_p130.json", "rules/p61_p131.json", "rules/p62_p132.json", "rules/p63_p133.json", "rules/p64_p134.json",
  "rules/p65_p135.json", "rules/p66_p136.json", "rules/p67_p137.json", "rules/p68_p138.json", "rules/p69_p139.json",
  "rules/p5_p74_non_GB_Eori_CR.json", "rules/p11_p80_non_GB_Eori_CR.json", "rules/p17_p86_non_GB_Eori_CR.json",
  "rules/p63_p133_non_GB_Eori_CR.json", "rules/p29_p98_non_GB_Eori_CR.json", "rules/p35_p104_non_GB_Eori_CR.json",
  "rules/p46_p115_non_GB_Eori_CR.json"
]

businessRules313 = [
  "rules/p1_p70.json", "rules/p2_p71.json", "rules/p3_p72.json", "rules/p4_p73.json", "rules/p5_p74.json"
  "rules/p6_p75.json", "rules/p7_p76.json", "rules/p8_p77.json", "rules/p9_p78.json", "rules/p10_p79.json",
  "rules/p11_p80.json", "rules/p12_p81.json", "rules/p13_p82.json", "rules/p14_p83.json", "rules/p15_p84.json",
  "rules/p16_p85.json", "rules/p17_p86.json", "rules/p18_p87.json", "rules/p19_p88.json", "rules/p20_p89.json",
  "rules/p21_p90.json", "rules/p22_p91.json", "rules/p23_p92.json", "rules/p24_p93.json", "rules/p25_p94.json",
  "rules/p26_p95.json", "rules/p27_p96.json", "rules/p28_p97.json", "rules/p29_p98.json", "rules/p30_p99.json",
  "rules/p31_p100.json", "rules/p32_p101.json", "rules/p33_p102.json", "rules/p34_p103.json", "rules/p35_p104.json",
  "rules/p36_p105.json", "rules/p37_p106.json", "rules/p38_p107.json", "rules/p39_p108.json", "rules/p40_p109.json",
  "rules/p41_p110.json", "rules/p42_p111.json", "rules/p43_p112.json", "rules/p44_p113.json", "rules/p45_p114.json",
  "rules/p46_p115.json", "rules/p47_p116.json", "rules/p48_p117.json", "rules/p49_p118.json", "rules/p50_p119.json",
  "rules/p51_p120.json", "rules/p52_p122.json", "rules/p53_p123.json", "rules/p54_p124.json",
  "rules/p55_p125.json", "rules/p56_p126.json", "rules/p57_p127.json", "rules/p58_p128.json", "rules/p59_p129.json",
  "rules/p60_p130.json", "rules/p61_p131.json", "rules/p62_p132.json", "rules/p63_p133.json", "rules/p64_p134.json",
  "rules/p65_p135.json", "rules/p66_p136.json", "rules/p67_p137.json", "rules/p68_p138.json", "rules/p69_p139.json",
  "rules/p5_p74_non_GB_Eori_CR.json", "rules/p11_p80_non_GB_Eori_CR.json", "rules/p17_p86_non_GB_Eori_CR.json",
  "rules/p63_p133_non_GB_Eori_CR.json", "rules/p29_p98_non_GB_Eori_CR.json", "rules/p35_p104_non_GB_Eori_CR.json",
  "rules/p46_p115_non_GB_Eori_CR.json"
]

businessRules313New = [
  "rules/p1_p70.json", "rules/p2_p71.json", "rules/p3_p72_New.json", "rules/p4_p73.json", "rules/p5_p74.json"
  "rules/p6_p75.json", "rules/p7_p76.json", "rules/p8_p77.json", "rules/p9_p78.json", "rules/p10_p79.json",
  "rules/p11_p80.json", "rules/p12_p81.json", "rules/p13_p82.json", "rules/p14_p83.json", "rules/p15_p84.json",
  "rules/p16_p85.json", "rules/p17_p86.json", "rules/p18_p87.json", "rules/p19_p88.json", "rules/p20_p89.json",
  "rules/p21_p90.json", "rules/p22_p91.json", "rules/p23_p92.json", "rules/p24_p93.json", "rules/p25_p94.json",
  "rules/p26_p95.json", "rules/p27_p96.json", "rules/p28_p97.json", "rules/p29_p98.json", "rules/p30_p99.json",
  "rules/p31_p100.json", "rules/p32_p101.json", "rules/p33_p102.json", "rules/p34_p103.json", "rules/p35_p104.json",
  "rules/p36_p105.json", "rules/p37_p106.json", "rules/p38_p107.json", "rules/p39_p108.json", "rules/p40_p109.json",
  "rules/p41_p110.json", "rules/p42_p111.json", "rules/p43_p112.json", "rules/p44_p113.json", "rules/p45_p114.json",
  "rules/p46_p115.json", "rules/p47_p116.json", "rules/p48_p117.json", "rules/p49_p118.json", "rules/p50_p119.json",
  "rules/p51_p120.json", "rules/p52_p122.json", "rules/p53_p123.json", "rules/p54_p124.json",
  "rules/p55_p125.json", "rules/p56_p126.json", "rules/p57_p127.json", "rules/p58_p128.json", "rules/p59_p129.json",
  "rules/p60_p130.json", "rules/p61_p131.json", "rules/p62_p132.json", "rules/p63_p133.json", "rules/p64_p134.json",
  "rules/p65_p135.json", "rules/p66_p136.json", "rules/p67_p137.json", "rules/p68_p138.json", "rules/p69_p139.json",
  "rules/p5_p74_non_GB_Eori_CR.json", "rules/p11_p80_non_GB_Eori_CR.json", "rules/p17_p86_non_GB_Eori_CR.json",
  "rules/p63_p133_non_GB_Eori_CR.json", "rules/p29_p98_non_GB_Eori_CR.json", "rules/p35_p104_non_GB_Eori_CR.json",
  "rules/p46_p115_non_GB_Eori_CR.json"
]
